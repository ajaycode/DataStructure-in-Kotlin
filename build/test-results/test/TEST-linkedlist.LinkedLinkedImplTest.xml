<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="linkedlist.LinkedLinkedImplTest" tests="24" skipped="0" failures="0" errors="0" timestamp="2020-12-20T17:00:42" hostname="chetan.gupta" time="0.06">
  <properties/>
  <testcase name="insert item at end to prefilled linkedlist first and last should be different()" classname="linkedlist.LinkedLinkedImplTest" time="0.025"/>
  <testcase name="delete item at invalid index of linked list with multiple items()" classname="linkedlist.LinkedLinkedImplTest" time="0.002"/>
  <testcase name="delete item with value 3 from empty linked list ()" classname="linkedlist.LinkedLinkedImplTest" time="0.001"/>
  <testcase name="insert item at first to prefilled linkedlist first and last should be different()" classname="linkedlist.LinkedLinkedImplTest" time="0.001"/>
  <testcase name="delete first item of linked list with multiple items()" classname="linkedlist.LinkedLinkedImplTest" time="0.0"/>
  <testcase name="delete item with value 2 from linked list with multiple items()" classname="linkedlist.LinkedLinkedImplTest" time="0.0"/>
  <testcase name="delete item at 3 of linked list with multiple items()" classname="linkedlist.LinkedLinkedImplTest" time="0.001"/>
  <testcase name="replace item at in empty list throws exception()" classname="linkedlist.LinkedLinkedImplTest" time="0.001"/>
  <testcase name="delete item at 1 of linked list with multiple items()" classname="linkedlist.LinkedLinkedImplTest" time="0.0"/>
  <testcase name="insert item at end to empty linkedlist first and last should be equal()" classname="linkedlist.LinkedLinkedImplTest" time="0.001"/>
  <testcase name="insert item at position between two nodes()" classname="linkedlist.LinkedLinkedImplTest" time="0.001"/>
  <testcase name="insert item at first to empty linkedlist first and last should be equal()" classname="linkedlist.LinkedLinkedImplTest" time="0.0"/>
  <testcase name="new list has 0 size and null first last nodes()" classname="linkedlist.LinkedLinkedImplTest" time="0.001"/>
  <testcase name="insert item at position 0 to empty linkedlist first and last should be equal()" classname="linkedlist.LinkedLinkedImplTest" time="0.0"/>
  <testcase name="delete item with value 3 from linked list with multiple items()" classname="linkedlist.LinkedLinkedImplTest" time="0.001"/>
  <testcase name="delete last item of linked list with multiple items()" classname="linkedlist.LinkedLinkedImplTest" time="0.002"/>
  <testcase name="replace item at first index, with value 5 when list has multiple item()" classname="linkedlist.LinkedLinkedImplTest" time="0.0"/>
  <testcase name="delete item with value 1 from linked list with multiple items()" classname="linkedlist.LinkedLinkedImplTest" time="0.0"/>
  <testcase name="delete item at 0 of linked list with multiple items()" classname="linkedlist.LinkedLinkedImplTest" time="0.001"/>
  <testcase name="replace item at last index, with value 5 when list has multiple item()" classname="linkedlist.LinkedLinkedImplTest" time="0.001"/>
  <testcase name="insert item at position 1 to empty linkedlist throws exception()" classname="linkedlist.LinkedLinkedImplTest" time="0.002"/>
  <testcase name="replace item at middle index, with value 5 when list has multiple item()" classname="linkedlist.LinkedLinkedImplTest" time="0.002"/>
  <testcase name="replace item at invalid index in list throws exception()" classname="linkedlist.LinkedLinkedImplTest" time="0.002"/>
  <testcase name="delete first item of linked list no items()" classname="linkedlist.LinkedLinkedImplTest" time="0.003"/>
  <system-out><![CDATA[LinkedListContent :  10 20
first : Node(value=10, next=Node(value=20, next=null))
last : Node(value=20, next=null)
LinkedListContent :  1 2 3
first : Node(value=1, next=Node(value=2, next=Node(value=3, next=null)))
last : Node(value=3, next=null)
LinkedListContent : 
first : null
last : null
LinkedListContent :  20 10
first : Node(value=20, next=Node(value=10, next=null))
last : Node(value=10, next=null)
LinkedListContent :  2 3
first : Node(value=2, next=Node(value=3, next=null))
last : Node(value=3, next=null)
LinkedListContent :  1 3
first : Node(value=1, next=Node(value=3, next=null))
last : Node(value=3, next=null)
LinkedListContent :  1 2
first : Node(value=1, next=Node(value=2, next=null))
last : Node(value=2, next=null)
LinkedListContent :  1 2 3
first : Node(value=1, next=Node(value=2, next=Node(value=3, next=null)))
last : Node(value=3, next=null)
LinkedListContent :  1 3
first : Node(value=1, next=Node(value=3, next=null))
last : Node(value=3, next=null)
LinkedListContent :  10
first : Node(value=10, next=null)
last : Node(value=10, next=null)
LinkedListContent :  10 30
first : Node(value=10, next=Node(value=30, next=null))
last : Node(value=30, next=null)
LinkedListContent :  10 20 30
first : Node(value=10, next=Node(value=20, next=Node(value=30, next=null)))
last : Node(value=30, next=null)
LinkedListContent :  10
first : Node(value=10, next=null)
last : Node(value=10, next=null)
LinkedListContent : 
first : null
last : null
LinkedListContent :  10
first : Node(value=10, next=null)
last : Node(value=10, next=null)
LinkedListContent :  1 2
first : Node(value=1, next=Node(value=2, next=null))
last : Node(value=2, next=null)
LinkedListContent :  1 2
first : Node(value=1, next=Node(value=2, next=null))
last : Node(value=2, next=null)
LinkedListContent :  5 2 3
first : Node(value=5, next=Node(value=2, next=Node(value=3, next=null)))
last : Node(value=3, next=null)
LinkedListContent :  2 3
first : Node(value=2, next=Node(value=3, next=null))
last : Node(value=3, next=null)
LinkedListContent :  2 3
first : Node(value=2, next=Node(value=3, next=null))
last : Node(value=3, next=null)
LinkedListContent :  1 2 5
first : Node(value=1, next=Node(value=2, next=Node(value=5, next=null)))
last : Node(value=5, next=null)
LinkedListContent : 
first : null
last : null
LinkedListContent :  1 5 3
first : Node(value=1, next=Node(value=5, next=Node(value=3, next=null)))
last : Node(value=3, next=null)
LinkedListContent : 
first : null
last : null
LinkedListContent : 
first : null
last : null
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
